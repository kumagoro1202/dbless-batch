<?xml version="1.0" encoding="UTF-8"?>

<component-configuration
    xmlns="http://tis.co.jp/nablarch/component-configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://tis.co.jp/nablarch/component-configuration  https://nablarch.github.io/schema/component-configuration.xsd">

  <!-- 精査に使用する文字集合定義 -->
  <import file="nablarch/core/validation/charset-definition.xml"/>

  <!-- DomainManager 実装クラス設定 -->
  <component name="domainManager" class="com.example.domain.SampleDomainManager"/>

  <component name="数字"
             class="nablarch.core.validation.validator.unicode.RangedCharsetDef">
    <property name="startCodePoint" value="U+0030"/>
    <property name="endCodePoint" value="U+0039"/>
  </component>

  <component name="数字とスペース" class="nablarch.core.validation.validator.unicode.CompositeCharsetDef">
    <property name="charsetDefList">
      <list>
        <component class="nablarch.core.validation.validator.unicode.RangedCharsetDef">
          <property name="startCodePoint" value="U+0030"/>
          <property name="endCodePoint" value="U+0039"/>
        </component>
        <component class="nablarch.core.validation.validator.unicode.LiteralCharsetDef">
          <property name="allowedCharacters" value=" "/>
        </component>
      </list>
    </property>
  </component>

  <component name="半角カタカナ"
             class="nablarch.core.validation.validator.unicode.RangedCharsetDef">
    <property name="startCodePoint" value="U+FF66"/>
    <property name="endCodePoint" value="U+FF9F"/>
  </component>

  <component name="フラグ"
             class="nablarch.core.validation.validator.unicode.RangedCharsetDef">
    <property name="startCodePoint" value="U+0030"/>
    <property name="endCodePoint" value="U+0031"/>
  </component>

  <component name="地名漢字" class="nablarch.core.validation.validator.unicode.RangedCharsetDef">
    <property name="startCodePoint" value="U+3001"/>
    <property name="endCodePoint" value="U+9F8d"/>
  </component>

  <!-- 環境設定ファイル -->
  <config-file file="common.config"/>
  <config-file file="env.config"/>

  <!--
  バッチ固有の設定読み込み
  -->
  <import file="core/date.xml"/>

  <!-- ファイルパス設置 -->
  <import file="nablarch/batch/filepath-for-batch.xml"/>
  <!-- マルチスレッド実行制御機能 -->
  <import file="nablarch/common/standalone/multi-thread.xml"/>
  <!-- データリード機能 -->
  <import file="nablarch/batch/batch-data-read.xml"/>
  <!-- スレッドコンテキスト機能 -->
  <import file="nablarch/batch/threadcontext-for-batch.xml"/>

  <!-- ハンドラキュー構成 -->
  <list name="handlerQueue">
    <!-- ステータスコードを終了コードに変換するハンドラ -->
    <component class="nablarch.fw.handler.StatusCodeConvertHandler"/>

    <!-- グローバルエラーハンドラ -->
    <component class="nablarch.fw.handler.GlobalErrorHandler"/>

    <!-- スレッドコンテキスト変数削除ハンドラ -->
    <component class="nablarch.common.handler.threadcontext.ThreadContextClearHandler"/>

    <!-- スレッドコンテキスト設定ハンドラ -->
    <component-ref name="threadContextHandler"/>

    <!-- ディスパッチ -->
    <component class="nablarch.fw.handler.RequestPathJavaPackageMapping">
      <property name="basePackage" value="${nablarch.commonProperty.basePackage}"/>
      <property name="immediate" value="false"/>
    </component>

    <!-- マルチスレッド実行制御ハンドラ -->
    <component-ref name="multiThreadExecutionHandler"/>

    <component class="com.example.system.fw.handler.LoopHandler"/>

    <!-- データリードハンドラ -->
    <component-ref name="dataReadHandler"/>
  </list>

  <!-- 初期化が必要なコンポーネント -->
  <component name="initializer"
             class="nablarch.core.repository.initialization.BasicApplicationInitializer">
    <property name="initializeList">
      <list>
        <!-- common/date.xml:業務日付コンポーネント -->
        <component-ref name="businessDateProvider"/>
      </list>
    </property>
  </component>

  <!-- ファイルパス管理の設定 -->
  <component name="filePathSetting" class="nablarch.core.util.FilePathSetting">
    <!-- ディレクトリの設定 -->
    <property name="basePathSettings">
      <map>
        <entry key="csv-input" value="${csv-input}"/>
      </map>
    </property>
    <!-- 拡張子の設定 -->
    <property name="fileExtensions">
      <map>
        <entry key="csv-input" value="csv"/>
      </map>
    </property>
  </component>

</component-configuration>
